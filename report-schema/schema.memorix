Enum Languages {
    typescript
}

Task {
    startSession {
        payload: {
            schema: string
            language: Languages
        }
    }
    collectPublish {
        payload: {
            identifier: string
            sessionId: string
            key: any?
            publishTraceId: string
            payload: any?
        }
    }
    collectSubscribeCallback {
        payload: {
            subscriptionId: string
            publishTraceId: string
        }
    }
    collectDequeue {
        payload: {
            identifier: string
            sessionId: string
            key: any?
        }
        returns: {
            dequeueId: string
        }
    }
    collectQueue {
        payload: {
            identifier: string
            sessionId: string
            key: any?
            queueTraceId: string
            payload: any?
        }
        returns: {
            queueId: string
        }
    }
    sendEventEnd {
        payload: {
            deviceId: string
            type: EventTypes
            traceId: string
        }
    }
    collectQueueCallback {
        payload: {
            queueId: string
}
