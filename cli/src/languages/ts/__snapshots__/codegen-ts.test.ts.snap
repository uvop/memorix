// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ts codegen cache can generate also with model 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export type User = {
  name: string;
  age?: number;
};

export class MemorixApi extends MemorixClientApi {
  cache = {
    adminId: this.getCacheItemNoKey<string | undefined>(\\"adminId\\"),
    user: this.getCacheItem<string, User>(\\"user\\"),
  };
}"
`;

exports[`ts codegen cache can generate with inline object type 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  cache = {
    user: this.getCacheItem<number, {
      name: string;
      age?: number;
    } | undefined>(\\"user\\"),
  };
}"
`;

exports[`ts codegen cache can generate with inline types 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  cache = {
    user: this.getCacheItem<number, string>(\\"user\\"),
  };
}"
`;

exports[`ts codegen cache can generate with no key 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  cache = {
    user: this.getCacheItemNoKey<{
      name: string;
      age?: number;
    } | undefined>(\\"user\\"),
  };
}"
`;

exports[`ts codegen cache can have options 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  cache = {
    // prettier-ignore
    user: this.getCacheItem<number, string>(\\"user\\", {expire:{value:5}}),
  };
}"
`;

exports[`ts codegen config can be null 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

// prettier-ignore
export class MemorixApi extends MemorixClientApi.fromConfig({defaultOptions:{cache:{expire:undefined}}}) {

}"
`;

exports[`ts codegen config can generate 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

// prettier-ignore
export class MemorixApi extends MemorixClientApi.fromConfig({defaultOptions:{cache:{expire:{value:5,extendOnGet:true}},task:{takeNewest:true}}}) {

}"
`;

exports[`ts codegen enum can generate 1`] = `
"/* eslint-disable */
export enum Animals {
  dog = \\"dog\\",
  cat = \\"cat\\",
  person = \\"person\\",
}"
`;

exports[`ts codegen model can generate from 2 models 1`] = `
"/* eslint-disable */
export type User1 = {
  id: number;
};

export type User2 = {
  name: string;
  age?: number;
};"
`;

exports[`ts codegen model can generate from model 1`] = `
"/* eslint-disable */
export type User = {
  id: number;
  name: string;
  age?: number;
};"
`;

exports[`ts codegen model can generate from model with array 1`] = `
"/* eslint-disable */
export type User = {
  id: number;
  names: Array<string>;
  children?: Array<{
    id: number;
    name?: string;
  } | undefined>;
};"
`;

exports[`ts codegen model can generate from model within model 1`] = `
"/* eslint-disable */
export type User = {
  id: number;
  papa: {
    name?: string;
  };
};"
`;

exports[`ts codegen model can generate from model within model within a model 1`] = `
"/* eslint-disable */
export type User = {
  id: number;
  papa: {
    name?: string;
    mama?: {
      sick: boolean;
    };
    age: number;
  };
};"
`;

exports[`ts codegen namespace can generate 1`] = `
"/* eslint-disable */
import { BaseMemorixApi, MemorixNamespace } from \\"@memorix/client-redis\\";

// prettier-ignore
class NamespaceUser extends MemorixNamespace.with({name:\\"user\\",defaultOptions:{cache:{expire:{value:5}}}}) {
  cache = {
    bio: this.getCacheItemNoKey<string>(\\"bio\\"),
  };
}

// prettier-ignore
export class MemorixApi extends BaseMemorixApi.withGlobal({defaultOptions:{cache:{expire:{value:6}}}}) {
  user = this.getNamespaceItem(NamespaceUser);

  cache = {
    favoriteUser: this.getCacheItemNoKey<string>(\\"favoriteUser\\"),
  };
}"
`;

exports[`ts codegen pubsub can generate with inline types 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  pubsub = {
    message: this.getPubsubItem<number, string>(\\"message\\"),
  };
}"
`;

exports[`ts codegen task can generate with inline types 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  task = {
    doIt: this.getTaskItem<number, string, boolean>(\\"doIt\\", true),
  };
}"
`;

exports[`ts codegen task can have options 1`] = `
"/* eslint-disable */
import { MemorixClientApi } from \\"@memorix/client-redis\\";

export class MemorixApi extends MemorixClientApi {
  task = {
    // prettier-ignore
    doIt: this.getTaskItem<number, string, boolean>(\\"doIt\\", true, {takeNewest:true}),
  };
}"
`;
